{"version":3,"sources":["webpack:///./src/renderer/$_lazy_route_resource lazy namespace object","webpack:///./src/renderer/app/extension.module.ts","webpack:///./src/renderer/app/processes-list/processes-list.component.html","webpack:///./src/renderer/app/processes-list/processes-list.component.scss","webpack:///./src/renderer/app/processes-list/processes-list.component.ts","webpack:///./src/renderer/environments/environment.ts","webpack:///./src/renderer/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qF;;;;;;;;;;;;;;;;;;;;;;;ACZwC;AACM;AAE9C,0DAA0D;AAC1D,yDAAyD;AACzD,+DAA+D;AAE/D,0DAA0D;AAEwB;AAalF;IAAA;IAA+B,CAAC;IAAnB,eAAe;QAV3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;aAKb;YACD,YAAY,EAAE,CAAC,+FAAsB,CAAC;SACvC,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ;;;;;;;;;;;;ACtB5B,0IAA0I,0BAA0B,uFAAuF,2BAA2B,mBAAmB,85CAA85C,cAAc,yB;;;;;;;;;;;ACArtD,+DAA+D,+K;;;;;;;;;;;;;;;;;;;;;;;;ACClB;AAE7C,mEAAmE;AACnE,yEAAyE;AACzE,6DAA6D;AAC7D,2CAA2C;AAC3C,mDAAmD;AACnD,0DAA0D;AAO1D;IAKE,gCACU,GAAsB;QAAtB,QAAG,GAAH,GAAG,CAAmB;QAJxB,kBAAa,GAAG,EAAE;QAClB,UAAK,GAAG,EAAE;IAMd,CAAC;IAEL,yCAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,EAAE;QACzB,gEAAgE;IAClE,CAAC;IAED,4CAAW,GAAX,cAAgB,CAAC;IAET,mDAAkB,GAA1B;QACE,kGAAkG;QAClG,yDAAyD;QACzD,+CAA+C;QAC/C,yBAAyB;QACzB,iCAAiC;QACjC,6BAA6B;QAC7B,KAAK;IACP,CAAC;IAED,iDAAgB,GAAhB,UAAiB,KAAU;QACzB,kCAAkC;QAClC,qBAAqB;IACvB,CAAC;IAED,gDAAe,GAAf,UAAgB,KAAU;QACxB,wDAAwD;QACxD,qBAAqB;IACvB,CAAC;IAED,8CAAa,GAAb,UAAc,KAAU;QACtB,wDAAwD;QACxD,qBAAqB;QAErB,4HAA4H;IAC9H,CAAC;IAED,mDAAkB,GAAlB,UAAmB,KAAU;QAC3B,gCAAgC;QAChC,qCAAqC;QACrC,qEAAqE;QACrE,8BAA8B;QAC9B,UAAU;QAEV,wEAAwE;QACxE,2BAA2B;QAC3B,OAAO;QACP,IAAI;IACN,CAAC;IAED,mDAAkB,GAAlB,UAAmB,KAAU;QAC3B,0CAA0C;QAC1C,gEAAgE;IAClE,CAAC;IA7DU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAOe,+DAAiB;OANrB,sBAAsB,CA+DlC;IAAD,6BAAC;CAAA;AA/DkC;;;;;;;;;;;;;ACfnC;AAAA;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;ACNF;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAElB;AACA;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,qEAAe,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/renderer/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\n\n// import { FlexLayoutModule } from '@angular/flex-layout'\n// import { NgbModule } from '@ng-bootstrap/ng-bootstrap'\n// import { NgxDatatableModule } from '@swimlane/ngx-datatable'\n\n// import { SharedModule } from 'app/shared/shared.module'\n\nimport { ProcessesListComponent } from './processes-list/processes-list.component'\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    // FlexLayoutModule,\n    // NgbModule,\n    // NgxDatatableModule,\n    // SharedModule,\n  ],\n  declarations: [ProcessesListComponent]\n})\nexport class ExtensionModule { }\n","module.exports = \"<div class=\\\"card\\\" fxLayout=\\\"column\\\" fxFlexFill>\\n  <!-- <div class=\\\"card-header\\\" style=\\\"padding: 0.35rem 0.60rem; -webkit-app-region: drag;\\\">\\n    Processes\\n    <div class=\\\"float-right\\\" style=\\\"-webkit-app-region: no-drag; -webkit-user-select: none; user-select: none;\\\">\\n      <i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n      <i class=\\\"fa fa-refresh\\\" aria-hidden=\\\"true\\\" (click)=\\\"onRefreshIconClick($event)\\\"></i>\\n      <i class=\\\"fa fa-cog\\\" aria-hidden=\\\"true\\\"></i>\\n      <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\" (click)=\\\"onCloseIconClick($event)\\\"></i>\\n    </div>\\n    <i class=\\\"fa fa-times close\\\" aria-hidden=\\\"true\\\"></i>\\n  </div> -->\\n  <div class=\\\"input-group input-group-sm\\\" fxFlex=\\\"0 1 auto\\\">\\n    <input type=\\\"text\\\" class=\\\"form-control\\\"\\n      placeholder=\\\"Filter...\\\" aria-label=\\\"Filter...\\\"\\n      (keypress)=\\\"onSearchKeypress($event)\\\"\\n      (keydown)=\\\"onSearchKeydown($event)\\\"\\n      (keyup)=\\\"onSearchKeyup($event)\\\">\\n    <span class=\\\"input-group-addon\\\">\\n      <i class=\\\"fa fa-bars\\\" aria-hidden=\\\"true\\\"></i>\\n    </span>\\n  </div>\\n\\n  <!-- <ngx-datatable\\n    fxFlex fxFlexFill\\n    class=\\\"bootstrap\\\"\\n    [rows]=\\\"nodes\\\"\\n    [columnMode]=\\\"'flex'\\\"\\n    [headerHeight]=\\\"30\\\"\\n    [footerHeight]=\\\"0\\\"\\n    [rowHeight]=\\\"30\\\"\\n    [scrollbarV]=\\\"true\\\"\\n    [scrollbarH]=\\\"true\\\"\\n    (activate)=\\\"onTableRowActivate($event)\\\">\\n    <ngx-datatable-column name=\\\"hWnd\\\" [flexGrow]=\\\"1\\\"></ngx-datatable-column>\\n    <ngx-datatable-column name=\\\"title\\\" [flexGrow]=\\\"3\\\"></ngx-datatable-column>\\n  </ngx-datatable> -->\\n\\n  <div class=\\\"card-footer text-muted\\\" style=\\\"padding: 0.35rem 0.60rem\\\" fxFlex=\\\"0 1 auto\\\">\\n    <!-- Count: {{nodes.length}} -->\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvcmVuZGVyZXIvYXBwL3Byb2Nlc3Nlcy1saXN0L3Byb2Nlc3Nlcy1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, OnDestroy, ChangeDetectorRef,\n  Output, EventEmitter } from '@angular/core'\nimport { Subscription } from 'rxjs'\n// import { ElectronService } from 'app/providers/electron.service'\n// import { IpcData, IpcDataType, IpcAction, IpcEvent } from 'shared/ipc'\n// import { WinApiTypes } from 'core/utilities/win-api-utils'\n// import { Process } from 'models/process'\n// import { ActivatedRoute } from '@angular/router'\n// import { WindowUrls } from 'core/windows-manager-utils'\n\n@Component({\n  selector: 'app-processes-list',\n  templateUrl: './processes-list.component.html',\n  styleUrls: ['./processes-list.component.scss']\n})\nexport class ProcessesListComponent implements OnInit, OnDestroy {\n\n  private nodesOriginal = []\n  private nodes = []\n\n  constructor(\n    private ref: ChangeDetectorRef,\n    // private route: ActivatedRoute,\n    // private electronService: ElectronService\n  ) { }\n\n  ngOnInit() {\n    this._registerIpcEvents()\n    // this.electronService.ipcClient.send(IpcAction.GetOpenWindows)\n  }\n\n  ngOnDestroy() { }\n\n  private _registerIpcEvents(): void {\n    // this.electronService.ipcClient.listen(IpcAction.GetOpenWindows, async (ipcEvent: IpcEvent) => {\n    //   // console.log('IpcAction.GetOpenWindows', ipcEvent)\n    //   const windows = ipcEvent.data.data.windows\n    //   this.nodes = windows\n    //   this.nodesOriginal = windows\n    //   this.ref.detectChanges()\n    // })\n  }\n\n  onSearchKeypress(event: any) {\n    // console.log('onSearchKeypress')\n    // console.log(event)\n  }\n\n  onSearchKeydown(event: any) {\n    // console.log('onSearchKeydown', this.searchInputValue)\n    // console.log(event)\n  }\n\n  onSearchKeyup(event: any) {\n    // console.log('onSearchKeydown', this.searchInputValue)\n    // console.log(event)\n\n    // this.nodes = this.nodesOriginal.filter(node => node.title.toLowerCase().indexOf(event.target.value.toLowerCase()) !== -1)\n  }\n\n  onTableRowActivate(event: any) {\n    // if (event.type === 'click') {\n    //   // console.log('Clicked', event)\n    //   // this.electronService.ipcClient.send(IpcAction.WindowSelect, {\n    //   //   hWnd: event.row.hWnd\n    //   // })\n\n    //   this.electronService.triggerAction('window-settings:open-window', {\n    //     hWnd: event.row.hWnd\n    //   })\n    // }\n  }\n\n  onRefreshIconClick(event: any) {\n    // this.electronService.refreshProcesses()\n    // this.electronService.ipcClient.send(IpcAction.GetOpenWindows)\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { ExtensionModule } from './app/extension.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(ExtensionModule);\r\n"],"sourceRoot":""}